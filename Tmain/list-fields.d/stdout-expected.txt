#LETTER	NAME	ENABLED	XFMTCHAR	DESCRIPTION
N	name	on	TRUE	tag name (fixed field)
F	input	on	TRUE	input file (fixed field)
P	pattern	on	TRUE	pattern (fixed field)
C	compact	off	TRUE	compact input line (fixed field, only used in -x option)
a	access	off	TRUE	Access (or export) of class members
f	file	on	TRUE	File-restricted scoping
i	inherits	off	TRUE	Inheritance information
K	NONE	off	TRUE	Kind of tag as full name
k	NONE	on	TRUE	Kind of tag as a single letter
l	language	off	TRUE	Language of input file containing tag
m	implementation	off	TRUE	Implementation information
n	line	off	TRUE	Line number of tag definition
r	role	off	TRUE	Role
R	NONE	off	TRUE	Marker (R or D) representing whether tag is definition or reference
S	signature	off	TRUE	Signature of routine (e.g. prototype or parameter list)
s	NONE	on	TRUE	Scope of tag definition (WARNING: this doesn't work well as a format letter)
t	typeref	on	TRUE	Type and name of a variable or typedef
z	kind	off	FALSE	Include the "kind:" key in kind field (use k or K)
Z	scope	off	FALSE	Include the "scope:" key in scope field (use s)
E	extra	off	TRUE	Extra tag type information
T	type	off	TRUE	Variable type or function return type
#
Foo	input.java	/^abstract public class Foo extends Bar$/
x	input.java	/^    public int x;$/
#a
Foo	input.java	/^abstract public class Foo extends Bar$/
x	input.java	/^    public int x;$/;"	access:public
#i
Foo	input.java	/^abstract public class Foo extends Bar$/;"	inherits:Bar
x	input.java	/^    public int x;$/
#kz
Foo	input.java	/^abstract public class Foo extends Bar$/;"	kind:c
x	input.java	/^    public int x;$/;"	kind:f
#Kz
Foo	input.java	/^abstract public class Foo extends Bar$/;"	kind:class
x	input.java	/^    public int x;$/;"	kind:field
#k
Foo	input.java	/^abstract public class Foo extends Bar$/;"	c
x	input.java	/^    public int x;$/;"	f
#K
Foo	input.java	/^abstract public class Foo extends Bar$/;"	class
x	input.java	/^    public int x;$/;"	field
#l
Foo	input.java	/^abstract public class Foo extends Bar$/;"	language:Java
x	input.java	/^    public int x;$/;"	language:Java
#m
Foo	input.java	/^abstract public class Foo extends Bar$/;"	implementation:abstract
x	input.java	/^    public int x;$/
#n
Foo	input.java	/^abstract public class Foo extends Bar$/;"	line:1
x	input.java	/^    public int x;$/;"	line:3
#s
Foo	input.java	/^abstract public class Foo extends Bar$/
x	input.java	/^    public int x;$/;"	class:Foo
#sZ
Foo	input.java	/^abstract public class Foo extends Bar$/
x	input.java	/^    public int x;$/;"	scope:class:Foo
#f
X	input.c	/^struct X {$/;"	file:
Y	input.c	/^struct Y {$/;"	file:
i	input.c	/^  int i;$/;"	file:
j	input.c	/^  int j;$/;"	file:
main	input.c	/^int main(void)$/
x	input.c	/^  struct X x;$/;"	file:
#S
X	input.c	/^struct X {$/
Y	input.c	/^struct Y {$/
i	input.c	/^  int i;$/
j	input.c	/^  int j;$/
main	input.c	/^int main(void)$/;"	signature:(void)
x	input.c	/^  struct X x;$/
#t
X	input.c	/^struct X {$/
Y	input.c	/^struct Y {$/
i	input.c	/^  int i;$/;"	typeref:typename:int
j	input.c	/^  int j;$/;"	typeref:typename:int
main	input.c	/^int main(void)$/;"	typeref:typename:int
x	input.c	/^  struct X x;$/;"	typeref:struct:X
#r
x	input.sh	/^source x$/;"	role:loaded
y	input.sh	/^function y()$/
#r
D/
R/loaded
