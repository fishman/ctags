.. _ctags-lang-asm(7):

==============================================================
ctags-lang-asm
==============================================================
-----------------------------------------------------------------------------
Random notes about tagging Assembly language source code with Universal Ctags
-----------------------------------------------------------------------------
:Version: @VERSION@
:Manual group: Universal Ctags
:Manual section: 7

SYNOPSIS
--------
|	**@CTAGS_NAME_EXECUTABLE@** ... --languages=+Asm ...
|	**@CTAGS_NAME_EXECUTABLE@** ... --language-force=Asm ...
|	**@CTAGS_NAME_EXECUTABLE@** ... --map-Asm=+.asm ...
|	**@CTAGS_NAME_EXECUTABLE@** ... --map-Asm=+.ASM ...
|	**@CTAGS_NAME_EXECUTABLE@** ... --map-Asm=+.s ...
|	**@CTAGS_NAME_EXECUTABLE@** ... --map-Asm=+.S ...

DESCRIPTION
-----------
This man page gathers random notes about tagging assembly language
source code.

The parser of Universal Ctags has been extended to support the source
code to be processed with *GNU assembler* (*Gas*).

PARAMETERS
----------
The Asm parser has some parameters for adapting it to different
assembler implementations.

Writing a parser for assembly language source code is not easy because
the syntax for the language differ depending on the implementations of
assemblers and target CPU architectures. For example, in *NASM*, `;`
is a starter of a line comment. On the other hand, in Gas for i386,
`;` is a line separator. The parameters explained this man page are
for mitigating the gaps of syntax.

Use ``--param-Asm.{parameter}={value}`` option for adjusting the value
for a parameter. For example:

.. code-block:: console

	$ @CTAGS_NAME_EXECUTABLE@ ... --param-Asm.runCPreProcessor=false ...

This command line sets ``false`` to ``runCPreProcessor`` parameter.

``--list-params=Asm`` lists available parameters available in the
Asm parser.

``runCPreProcessor``: running C preprocessor
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
By default, the CPreProcessor parser processes the assembly language
source code before the Asm parser does.

The main effects of running the CPreProcessor parser;

* lines started from `//` are stripped as comments,
* areas surrounded by the pair of `/*` and `*/` are
  started as comments, and
* macro defined with `#define` are extracted as tags.

Set `runCPreProcessor` to `false` for disabling the CPreProcessor
parser running before the Asm parser.

``commentChars``: adjusting line comment starter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
By default, the Asm parser ignores lines starting from `;`, `*`, or
`@` as comments. `//` is also ignored if `runCPreProcessor` is `true`.

``commentChars`` is for changing the characters for line comments.
The next example if for assembler input using `!` and `>` as the comment starter:

.. code-block:: console

	$ @CTAGS_NAME_EXECUTABLE@ ... --param-Asm.commentChars='!>' ...

``extraLinesepChars``: adding line separators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The Asm parser processes its input line oriented way.  By default, the
parser recognizes `\n` as a line separator.  ``extraLinesepChars`` is
for adding more line separators.

In Gas for AArch64, the ';' character can be used as line separators.
The next example for adjusting the Asm parser to the extra line
separator:

.. code-block:: console

	$ @CTAGS_NAME_EXECUTABLE@ ... --param-Asm.extraLinesepChars=';' ...

SEE ALSO
--------
ctags(1), Info entries for GNU assembler
